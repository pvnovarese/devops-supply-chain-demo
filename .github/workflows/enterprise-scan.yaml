# This workflow checks out code, builds an image, performs a container image
# vulnerability scan with Anchore's Grype tool, and integrates the results with GitHub Advanced Security
# code scanning feature.  For more information on the Anchore scan action usage
# and parameters, see https://github.com/anchore/scan-action. For more
# information on Anchore's container image scanning tool Grype, see
# https://github.com/anchore/grype
name: Anchore Enterprise Test

on:
#  push:
#    branches:
#      - master
#  schedule:
#    - cron: '38 19 * * 6'
  workflow_dispatch:
    branches:
      - master

#workflow environment
env:
  IMAGE: ghcr.io/${GITHUB_REPOSITORY}:${GITHUB_SHA}
  
jobs:
  Build-Push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: Login to ghcr.io
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${GITHUB_ACTOR} --password-stdin
    - name: Build and Push the Docker image
      run: |
        docker build . --file Dockerfile --tag ${IMAGE}
        docker push ${IMAGE}

  Enterprise-Queue:
    needs: Build-Push
    runs-on: ubuntu-latest
    env:
      ANCHORE_CLI_USER: ${{ secrets.ANCHORE_CLI_USER }}
      ANCHORE_CLI_PASS: ${{ secrets.ANCHORE_CLI_PASS }}
      ANCHORE_CLI_URL: ${{ secrets.ANCHORE_CLI_URL }}
    steps:
    - name: Add to Enterprise Queue
      run: | 
        docker run -e ANCHORE_CLI_USER -e ANCHORE_CLI_PASS -e ANCHORE_CLI_URL anchore/engine-cli anchore-cli image add --noautosubscribe ${IMAGE}
    - name: Wait for Enterprise Analysis
      run: docker run -e ANCHORE_CLI_USER -e ANCHORE_CLI_PASS -e ANCHORE_CLI_URL anchore/engine-cli anchore-cli image wait ${GITHUB_REPOSITORY}:${GITHUB_SHA}



# evaluate check?

#  Anchore-Scan-Action:
#    needs: Build-Push
#    runs-on: ubuntu-latest
#    steps:
#    - name: Anchore Scan Action with GitHub Advanced Security
#      uses: anchore/scan-action@main
#      with:
#        image: "${GITHUB_REPOSITORY}:${GITHUB_SHA}"
#        fail-build: false
#        acs-report-enable: true
#    - name: Upload Anchore Scan Report
#      uses: github/codeql-action/upload-sarif@v1
#      with:
#        sarif_file: results.sarif
